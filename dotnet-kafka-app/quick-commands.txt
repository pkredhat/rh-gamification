# Start Kafka Server Container
podman stop kafka-server
podman rm kafka-server
podman run -d --name kafka-server \
  -e ALLOW_PLAINTEXT_LISTENER=yes \
  -e KAFKA_ENABLE_KRAFT=yes \
  -e KAFKA_CFG_NODE_ID=1 \
  -e KAFKA_CFG_PROCESS_ROLES=controller,broker \
  -e KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093 \
  -e KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 \
  -e KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092 \
  -e KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER \
  -p 9092:9092 -p 9093:9093 \
  docker.io/bitnami/kafka:latest


# RUN Dotnet container
podman run -d --name dotnet-kafka-app \
  --network host --rm --platform=linux/amd64 \
  -e KAFKA_BOOTSTRAP_SERVERS="localhost:9092" \
  localhost/dotnet-kafka-app


# Create topic 
podman exec -it kafka-server kafka-topics.sh --create --topic test-topic --bootstrap-server host.containers.internal:9092 --partitions 1 --replication-factor 1

# Produce topic 
podman exec -it kafka-server kafka-console-producer.sh --broker-list localhost:9092 --topic test-topic

# List topics
podman exec -it kafka-server kafka-topics.sh --bootstrap-server localhost:9092 --list

# Listen For New Messages
podman exec -it kafka-server kafka-console-consumer.sh \
  --bootstrap-server 127.0.0.1:9092 \
  --topic test-topic \
  --from-beginning

  #Run Dotnet in podman
  podman run --rm --network host -it localhost/dotnet-kafka-app sh


#Quick test OPenshift
oc run dotnet-kafka-app-debug --rm -it --restart=Never --image=quay.io/pknezevich/dotnet-kafka-app --env=KAFKA_BOOTSTRAP_SERVERS=pk-kafka-cluster-kafka-bootstrap:9092 -- bash